# Makefile.in generated by automake 1.10.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






pkgdatadir = $(datadir)/libomxil-bellagio
pkglibdir = $(libdir)/libomxil-bellagio
pkgincludedir = $(includedir)/libomxil-bellagio
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
bin_PROGRAMS = omxregister-bellagio$(EXEEXT)
subdir = src
DIST_COMMON = $(include_extra_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/acx_pthread.m4 \
	$(top_srcdir)/m4/as_ac_expand.m4 \
	$(top_srcdir)/m4/ax_set_plugindir.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(include_extradir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libomxil_bellagio_la_DEPENDENCIES = base/libomxbase.la
am_libomxil_bellagio_la_OBJECTS =  \
	libomxil_bellagio_la-st_static_component_loader.lo \
	libomxil_bellagio_la-omxcore.lo \
	libomxil_bellagio_la-omx_create_loaders_linux.lo \
	libomxil_bellagio_la-tsemaphore.lo \
	libomxil_bellagio_la-queue.lo libomxil_bellagio_la-common.lo
libomxil_bellagio_la_OBJECTS = $(am_libomxil_bellagio_la_OBJECTS)
libomxil_bellagio_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libomxil_bellagio_la_CFLAGS) $(CFLAGS) \
	$(libomxil_bellagio_la_LDFLAGS) $(LDFLAGS) -o $@
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_omxregister_bellagio_OBJECTS =  \
	omxregister_bellagio-omxregister.$(OBJEXT) \
	omxregister_bellagio-common.$(OBJEXT)
omxregister_bellagio_OBJECTS = $(am_omxregister_bellagio_OBJECTS)
omxregister_bellagio_LDADD = $(LDADD)
omxregister_bellagio_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(omxregister_bellagio_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libomxil_bellagio_la_SOURCES) \
	$(omxregister_bellagio_SOURCES)
DIST_SOURCES = $(libomxil_bellagio_la_SOURCES) \
	$(omxregister_bellagio_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
include_extraHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_extra_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/zhangbin/zbhome/omx/bsp/ns115/media/scomx/gst/libomxil-bellagio-0.9.1/missing --run aclocal-1.10
ALSA_CFLAGS = -I/usr/include/alsa  
ALSA_LIBS = -lasound  
AMTAR = ${SHELL} /home/zhangbin/zbhome/omx/bsp/ns115/media/scomx/gst/libomxil-bellagio-0.9.1/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/zhangbin/zbhome/omx/bsp/ns115/media/scomx/gst/libomxil-bellagio-0.9.1/missing --run autoconf
AUTOHEADER = ${SHELL} /home/zhangbin/zbhome/omx/bsp/ns115/media/scomx/gst/libomxil-bellagio-0.9.1/missing --run autoheader
AUTOMAKE = ${SHELL} /home/zhangbin/zbhome/omx/bsp/ns115/media/scomx/gst/libomxil-bellagio-0.9.1/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -pthread -g -Wall
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
FFMPEG_CFLAGS = 
FFMPEG_LIBS = 
GREP = /bin/grep
HAVE_DOXYGEN = true
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -ldl  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAD_CFLAGS =  
MAD_LIBS = -lmad -lid3tag -lz  
MAKEINFO = ${SHELL} /home/zhangbin/zbhome/omx/bsp/ns115/media/scomx/gst/libomxil-bellagio-0.9.1/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = libomxil-bellagio
PACKAGE_BUGREPORT = 
PACKAGE_NAME = OpenMAX Bellagio
PACKAGE_STRING = OpenMAX Bellagio 0.9.1
PACKAGE_TARNAME = libomxil-bellagio
PACKAGE_VERSION = 0.9.1
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PLUGINDIR = /home/zhangbin/zbhome/omx/bsp/ns115/media/scomx/gst/home/omx/lib/bellagio
PLUGIN_LDFLAGS = -module -avoid-version -no-undefined -as-needed
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHARED_VERSION_INFO = 0:0:0
SHELL = /bin/bash
STRIP = strip
VERSION = 0.9.1
VORBIS_CFLAGS =  
VORBIS_LIBS = -lvorbis -lm -logg  
abs_builddir = /home/zhangbin/zbhome/omx/bsp/ns115/media/scomx/gst/libomxil-bellagio-0.9.1/src
abs_srcdir = /home/zhangbin/zbhome/omx/bsp/ns115/media/scomx/gst/libomxil-bellagio-0.9.1/src
abs_top_builddir = /home/zhangbin/zbhome/omx/bsp/ns115/media/scomx/gst/libomxil-bellagio-0.9.1
abs_top_srcdir = /home/zhangbin/zbhome/omx/bsp/ns115/media/scomx/gst/libomxil-bellagio-0.9.1
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/zhangbin/zbhome/omx/bsp/ns115/media/scomx/gst/libomxil-bellagio-0.9.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
plugindir = ${libdir}/bellagio
prefix = /home/zhangbin/zbhome/omx/bsp/ns115/media/scomx/gst/home/omx
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..

# Build order is important
# First base, then core, finally components
SUBDIRS = base . components
omxregister_bellagio_SOURCES = omxregister.c common.c common.h
omxregister_bellagio_CFLAGS = -DOMXILCOMPONENTSPATH=\"$(plugindir)/\" \
			      -I$(top_srcdir)/include

lib_LTLIBRARIES = libomxil-bellagio.la
libomxil_bellagio_la_SOURCES = component_loader.h \
			       st_static_component_loader.c st_static_component_loader.h \
			       omxcore.c omxcore.h \
			       omx_create_loaders_linux.c omx_create_loaders.h \
			       omx_comp_debug_levels.h \
			       tsemaphore.c tsemaphore.h \
			       queue.c queue.h \
			       common.c common.h

libomxil_bellagio_la_CFLAGS = -I$(top_srcdir)/include -I$(srcdir)/base
libomxil_bellagio_la_LIBADD = base/libomxbase.la
libomxil_bellagio_la_LDFLAGS = -version-info 0:0:0
include_extradir = $(includedir)/bellagio
include_extra_HEADERS = $(srcdir)/omxcore.h \
			$(srcdir)/queue.h \
			$(srcdir)/component_loader.h \
			$(srcdir)/st_static_component_loader.h \
			$(srcdir)/tsemaphore.h \
			$(srcdir)/omx_comp_debug_levels.h \
			$(srcdir)/base/omx_base_component.h \
			$(srcdir)/base/omx_base_port.h \
			$(srcdir)/base/omx_base_audio_port.h \
			$(srcdir)/base/omx_base_video_port.h \
			$(srcdir)/base/omx_base_filter.h \
			$(srcdir)/base/omx_base_sink.h \
			$(srcdir)/base/omx_base_source.h \
			$(srcdir)/base/omx_classmagic.h

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libomxil-bellagio.la: $(libomxil_bellagio_la_OBJECTS) $(libomxil_bellagio_la_DEPENDENCIES) 
	$(libomxil_bellagio_la_LINK) -rpath $(libdir) $(libomxil_bellagio_la_OBJECTS) $(libomxil_bellagio_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
omxregister-bellagio$(EXEEXT): $(omxregister_bellagio_OBJECTS) $(omxregister_bellagio_DEPENDENCIES) 
	@rm -f omxregister-bellagio$(EXEEXT)
	$(omxregister_bellagio_LINK) $(omxregister_bellagio_OBJECTS) $(omxregister_bellagio_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libomxil_bellagio_la-common.Plo
include ./$(DEPDIR)/libomxil_bellagio_la-omx_create_loaders_linux.Plo
include ./$(DEPDIR)/libomxil_bellagio_la-omxcore.Plo
include ./$(DEPDIR)/libomxil_bellagio_la-queue.Plo
include ./$(DEPDIR)/libomxil_bellagio_la-st_static_component_loader.Plo
include ./$(DEPDIR)/libomxil_bellagio_la-tsemaphore.Plo
include ./$(DEPDIR)/omxregister_bellagio-common.Po
include ./$(DEPDIR)/omxregister_bellagio-omxregister.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libomxil_bellagio_la-st_static_component_loader.lo: st_static_component_loader.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libomxil_bellagio_la_CFLAGS) $(CFLAGS) -MT libomxil_bellagio_la-st_static_component_loader.lo -MD -MP -MF $(DEPDIR)/libomxil_bellagio_la-st_static_component_loader.Tpo -c -o libomxil_bellagio_la-st_static_component_loader.lo `test -f 'st_static_component_loader.c' || echo '$(srcdir)/'`st_static_component_loader.c
	mv -f $(DEPDIR)/libomxil_bellagio_la-st_static_component_loader.Tpo $(DEPDIR)/libomxil_bellagio_la-st_static_component_loader.Plo
#	source='st_static_component_loader.c' object='libomxil_bellagio_la-st_static_component_loader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libomxil_bellagio_la_CFLAGS) $(CFLAGS) -c -o libomxil_bellagio_la-st_static_component_loader.lo `test -f 'st_static_component_loader.c' || echo '$(srcdir)/'`st_static_component_loader.c

libomxil_bellagio_la-omxcore.lo: omxcore.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libomxil_bellagio_la_CFLAGS) $(CFLAGS) -MT libomxil_bellagio_la-omxcore.lo -MD -MP -MF $(DEPDIR)/libomxil_bellagio_la-omxcore.Tpo -c -o libomxil_bellagio_la-omxcore.lo `test -f 'omxcore.c' || echo '$(srcdir)/'`omxcore.c
	mv -f $(DEPDIR)/libomxil_bellagio_la-omxcore.Tpo $(DEPDIR)/libomxil_bellagio_la-omxcore.Plo
#	source='omxcore.c' object='libomxil_bellagio_la-omxcore.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libomxil_bellagio_la_CFLAGS) $(CFLAGS) -c -o libomxil_bellagio_la-omxcore.lo `test -f 'omxcore.c' || echo '$(srcdir)/'`omxcore.c

libomxil_bellagio_la-omx_create_loaders_linux.lo: omx_create_loaders_linux.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libomxil_bellagio_la_CFLAGS) $(CFLAGS) -MT libomxil_bellagio_la-omx_create_loaders_linux.lo -MD -MP -MF $(DEPDIR)/libomxil_bellagio_la-omx_create_loaders_linux.Tpo -c -o libomxil_bellagio_la-omx_create_loaders_linux.lo `test -f 'omx_create_loaders_linux.c' || echo '$(srcdir)/'`omx_create_loaders_linux.c
	mv -f $(DEPDIR)/libomxil_bellagio_la-omx_create_loaders_linux.Tpo $(DEPDIR)/libomxil_bellagio_la-omx_create_loaders_linux.Plo
#	source='omx_create_loaders_linux.c' object='libomxil_bellagio_la-omx_create_loaders_linux.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libomxil_bellagio_la_CFLAGS) $(CFLAGS) -c -o libomxil_bellagio_la-omx_create_loaders_linux.lo `test -f 'omx_create_loaders_linux.c' || echo '$(srcdir)/'`omx_create_loaders_linux.c

libomxil_bellagio_la-tsemaphore.lo: tsemaphore.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libomxil_bellagio_la_CFLAGS) $(CFLAGS) -MT libomxil_bellagio_la-tsemaphore.lo -MD -MP -MF $(DEPDIR)/libomxil_bellagio_la-tsemaphore.Tpo -c -o libomxil_bellagio_la-tsemaphore.lo `test -f 'tsemaphore.c' || echo '$(srcdir)/'`tsemaphore.c
	mv -f $(DEPDIR)/libomxil_bellagio_la-tsemaphore.Tpo $(DEPDIR)/libomxil_bellagio_la-tsemaphore.Plo
#	source='tsemaphore.c' object='libomxil_bellagio_la-tsemaphore.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libomxil_bellagio_la_CFLAGS) $(CFLAGS) -c -o libomxil_bellagio_la-tsemaphore.lo `test -f 'tsemaphore.c' || echo '$(srcdir)/'`tsemaphore.c

libomxil_bellagio_la-queue.lo: queue.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libomxil_bellagio_la_CFLAGS) $(CFLAGS) -MT libomxil_bellagio_la-queue.lo -MD -MP -MF $(DEPDIR)/libomxil_bellagio_la-queue.Tpo -c -o libomxil_bellagio_la-queue.lo `test -f 'queue.c' || echo '$(srcdir)/'`queue.c
	mv -f $(DEPDIR)/libomxil_bellagio_la-queue.Tpo $(DEPDIR)/libomxil_bellagio_la-queue.Plo
#	source='queue.c' object='libomxil_bellagio_la-queue.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libomxil_bellagio_la_CFLAGS) $(CFLAGS) -c -o libomxil_bellagio_la-queue.lo `test -f 'queue.c' || echo '$(srcdir)/'`queue.c

libomxil_bellagio_la-common.lo: common.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libomxil_bellagio_la_CFLAGS) $(CFLAGS) -MT libomxil_bellagio_la-common.lo -MD -MP -MF $(DEPDIR)/libomxil_bellagio_la-common.Tpo -c -o libomxil_bellagio_la-common.lo `test -f 'common.c' || echo '$(srcdir)/'`common.c
	mv -f $(DEPDIR)/libomxil_bellagio_la-common.Tpo $(DEPDIR)/libomxil_bellagio_la-common.Plo
#	source='common.c' object='libomxil_bellagio_la-common.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libomxil_bellagio_la_CFLAGS) $(CFLAGS) -c -o libomxil_bellagio_la-common.lo `test -f 'common.c' || echo '$(srcdir)/'`common.c

omxregister_bellagio-omxregister.o: omxregister.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omxregister_bellagio_CFLAGS) $(CFLAGS) -MT omxregister_bellagio-omxregister.o -MD -MP -MF $(DEPDIR)/omxregister_bellagio-omxregister.Tpo -c -o omxregister_bellagio-omxregister.o `test -f 'omxregister.c' || echo '$(srcdir)/'`omxregister.c
	mv -f $(DEPDIR)/omxregister_bellagio-omxregister.Tpo $(DEPDIR)/omxregister_bellagio-omxregister.Po
#	source='omxregister.c' object='omxregister_bellagio-omxregister.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omxregister_bellagio_CFLAGS) $(CFLAGS) -c -o omxregister_bellagio-omxregister.o `test -f 'omxregister.c' || echo '$(srcdir)/'`omxregister.c

omxregister_bellagio-omxregister.obj: omxregister.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omxregister_bellagio_CFLAGS) $(CFLAGS) -MT omxregister_bellagio-omxregister.obj -MD -MP -MF $(DEPDIR)/omxregister_bellagio-omxregister.Tpo -c -o omxregister_bellagio-omxregister.obj `if test -f 'omxregister.c'; then $(CYGPATH_W) 'omxregister.c'; else $(CYGPATH_W) '$(srcdir)/omxregister.c'; fi`
	mv -f $(DEPDIR)/omxregister_bellagio-omxregister.Tpo $(DEPDIR)/omxregister_bellagio-omxregister.Po
#	source='omxregister.c' object='omxregister_bellagio-omxregister.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omxregister_bellagio_CFLAGS) $(CFLAGS) -c -o omxregister_bellagio-omxregister.obj `if test -f 'omxregister.c'; then $(CYGPATH_W) 'omxregister.c'; else $(CYGPATH_W) '$(srcdir)/omxregister.c'; fi`

omxregister_bellagio-common.o: common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omxregister_bellagio_CFLAGS) $(CFLAGS) -MT omxregister_bellagio-common.o -MD -MP -MF $(DEPDIR)/omxregister_bellagio-common.Tpo -c -o omxregister_bellagio-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c
	mv -f $(DEPDIR)/omxregister_bellagio-common.Tpo $(DEPDIR)/omxregister_bellagio-common.Po
#	source='common.c' object='omxregister_bellagio-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omxregister_bellagio_CFLAGS) $(CFLAGS) -c -o omxregister_bellagio-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

omxregister_bellagio-common.obj: common.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omxregister_bellagio_CFLAGS) $(CFLAGS) -MT omxregister_bellagio-common.obj -MD -MP -MF $(DEPDIR)/omxregister_bellagio-common.Tpo -c -o omxregister_bellagio-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`
	mv -f $(DEPDIR)/omxregister_bellagio-common.Tpo $(DEPDIR)/omxregister_bellagio-common.Po
#	source='common.c' object='omxregister_bellagio-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(omxregister_bellagio_CFLAGS) $(CFLAGS) -c -o omxregister_bellagio-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-include_extraHEADERS: $(include_extra_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(include_extradir)" || $(MKDIR_P) "$(DESTDIR)$(include_extradir)"
	@list='$(include_extra_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(include_extraHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(include_extradir)/$$f'"; \
	  $(include_extraHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(include_extradir)/$$f"; \
	done

uninstall-include_extraHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_extra_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(include_extradir)/$$f'"; \
	  rm -f "$(DESTDIR)$(include_extradir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(include_extradir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-include_extraHEADERS

install-dvi: install-dvi-recursive

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-include_extraHEADERS \
	uninstall-libLTLIBRARIES

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-include_extraHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-include_extraHEADERS \
	uninstall-libLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
